{%- set docker_sock = drone_docker.lookup.docker_sock %}
{%- if not docker_sock %}
{%-   if not drone_docker.install.rootless %}
{%-     set docker_sock = "/var/run/podman/podman.sock" %}
{%-   else %}
{%-     set docker_sock = "/var/run/user/{}/podman/podman.sock".format(salt["user.info"](drone_docker.lookup.user.name).uid) %}
{%-   endif %}
{%- endif %}
---
version: "3.8"
services:
  drone_docker:
    image: {{ drone_docker.lookup.containers.drone_docker.image }}
    # Passing through the socket essentially amounts to privileged mode.
    privileged: true
    # security_opt:
    #   - "label=disable"
    env_file:
      - {{ drone_docker.lookup.paths.config_drone_docker }}
    volumes:
      - {{ docker_sock }}:/var/run/docker.sock
    ports:
      - {{ drone_docker.container.listen }}:3000
{%- if drone_docker.install.autoupdate %}
    labels:
      - io.containers.autoupdate=registry
{%- endif %}

{%- if drone_docker.vault.enable %}
    depends_on:
      - drone_vault

  drone_vault:
    container_name: drone_vault
    hostname: drone_vault
    image: {{ drone_docker.lookup.containers.drone_vault.image }}
    env_file:
      - {{ drone_docker.lookup.paths.config_drone_vault }}
{%-  if drone_docker.vault.config.cacert %}
    volumes:
      - {{ drone_docker.lookup.paths.base | path_join("tls") }}:/tls
{%-  endif %}
{%-  if drone_docker.install.autoupdate %}
    labels:
      - io.containers.autoupdate=registry
{%-   endif %}
{%- endif %}
